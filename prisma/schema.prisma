// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  role      Role
  createdAt DateTime @default(now())
  reports   Report[]
  disasters Disaster[] @relation("UserDisasters")

  @@index([role])
}

model Disaster {
  id            String    @id @default(uuid())
  title         String
  locationName  String
  location      Json      // Youâ€™ll store GeoJSON or lat/lng here
  description   String
  tags          String[]
  createdAt     DateTime  @default(now())
  ownerId       String
  owner         User      @relation("UserDisasters", fields: [ownerId], references: [id])
  auditTrail    Json
  reports       Report[]
  resources     Resource[]

  @@index([ownerId])
  @@index([createdAt])
}

model Report {
  id                String   @id @default(uuid())
  disasterId        String
  userId            String
  content           String
  imageUrl          String
  verificationStatus VerificationStatus @default(PENDING)
  createdAt         DateTime @default(now())
  disaster          Disaster @relation(fields: [disasterId], references: [id])
  user              User     @relation(fields: [userId], references: [id])

  @@index([disasterId])
  @@index([userId])
}

model Resource {
  id            String   @id @default(uuid())
  disasterId    String
  name          String
  locationName  String
  location      Json     // GeoJSON/lat-lng
  type          String
  createdAt     DateTime @default(now())
  disaster      Disaster @relation(fields: [disasterId], references: [id])

  @@index([disasterId])
  @@index([type])
}

model Cache {
  key        String   @id
  value      Json
  expiresAt  DateTime
}

enum Role {
  ADMIN
  CONTRIBUTOR
}

enum VerificationStatus {
  VERIFIED
  UNVERIFIED
  PENDING
}
